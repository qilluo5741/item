<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
						http://www.springframework.org/schema/beans/spring-beans.xsd
						http://www.springframework.org/schema/aop 
						http://www.springframework.org/schema/aop/spring-aop.xsd
						http://www.springframework.org/schema/context 
						http://www.springframework.org/schema/context/spring-context.xsd
						http://www.springframework.org/schema/tx 
						http://www.springframework.org/schema/tx/spring-tx.xsd">
	<!-- 配置扫描包 -->
	<context:component-scan base-package="com.spring"/>
	<!-- 启用注解 -->
	<context:annotation-config/>
	<context:property-placeholder location="classpath:db.properties" ignore-unresolvable="true"/>
	<context:property-placeholder location="classpath:config.properties" ignore-unresolvable="true"/>
	<context:property-placeholder location="classpath:jedis.properties" ignore-unresolvable="true" />
	<!-- 配置数据源 -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="${jdbc.driver}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}"/>
		<property name="password" value="${jdbc.password}"/>
		 <!-- 初始化连接大小 -->    
        <property name="initialSize" value="${jdbc.initialSize}"></property>    
        <!-- 连接池最大数量 -->    
        <property name="maxActive" value="${jdbc.maxActive}"></property>    
        <!-- 连接池最大空闲 -->    
        <property name="maxIdle" value="${jdbc.maxIdle}"></property>    
        <!-- 连接池最小空闲 -->    
        <property name="minIdle" value="${jdbc.minIdle}"></property>    
        <!-- 获取连接最大等待时间 -->    
        <property name="maxWait" value="${jdbc.maxWait}"></property>    
        <!-- 连接属性 -->  
       <property name="connectionProperties">  
         	<value>clientEncoding=UTF-8</value>  
       </property>
	</bean>
	<!-- 配置数据库核心工厂; 注入dataSource ;向 sqlSessionFactory提供mybatis的配置文件 -->
	<bean id="sqlSessionFactory" name="yssqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="mapperLocations" value="classpath*:mapper/*Mapper.xml" />
		<property name="configurationProperties">
			<props>
				<!-- 开启缓存 -->
				<prop key="cacheEnabled">true</prop>
				<!-- 关闭懒加载 -->
				<prop key="lazyLoadingEnabled">false</prop>
				<prop key="aggressiveLazyLoading">false</prop>
			</props>
		</property>
	</bean>
	<!-- 提供sqlSessionFactory;mapper扫描器提供需要扫描的包，有多个包用逗号隔开 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
		<property name="basePackage" value="com.spring.mapper"/>
	</bean>
	<!-- 声明事物~~~ -->
	<tx:annotation-driven transaction-manager="transactionManager" />
	<!-- 注解方式配置事务 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	<!-- ==============================redis参数配置============================ -->
	<!-- redis连接池参数配置 -->
	<bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
		<!-- 连接耗尽时是否阻塞, false报异常,ture阻塞直到超时, 默认true -->
		<property name="blockWhenExhausted" value="${redis.blockWhenExhausted}"/>
		<!-- 设置的逐出策略类名, 默认DefaultEvictionPolicy(当连接超过最大空闲时间,或连接数超过最大空闲连接数) -->
		<property name="evictionPolicyClassName" value="${redis.evictionPolicyClassName}"/>
		<!-- 是否启用pool的jmx管理功能, 默认true -->
		<property name="jmxEnabled" value="${redis.jmxEnabled}"/>
		<!--MBean ObjectName = new ObjectName("org.apache.commons.pool2:type=GenericObjectPool,name=" 
			+ "pool" + i); 默认为"pool", JMX不熟,具体不知道是干啥的...默认就好. -->
		<property name="jmxNamePrefix" value="${redis.jmxNamePrefix}" />
		<!-- 是否启用后进先出, 默认true -->
		<property name="lifo" value="${redis.lifo}" />
		<!-- 最大空闲连接数, 默认8个 -->
		<property name="maxIdle" value="${redis.maxIdle}"/>
		<!-- 最大连接数 -->
		<property name="maxTotal" value="${redis.maxTotal}" />
		<!-- 获取连接时的最大等待毫秒数(如果设置为阻塞时BlockWhenExhausted),如果超时就抛异常, 小于零:阻塞不确定的时间, 默认-1 -->
		<property name="maxWaitMillis" value="${redis.maxWaitMillis}" />
		<!-- 逐出连接的最小空闲时间 默认1800000毫秒(30分钟) -->
		<property name="minEvictableIdleTimeMillis" value="${redis.minEvictableIdleTimeMillis}" />
		<!--最小空闲连接数, 默认0 -->
		<property name="minIdle" value="${redis.minIdle}"/>
		<!-- 每次逐出检查时 逐出的最大数目 如果为负数就是 : 1/abs(n), 默认3 -->
		<property name="numTestsPerEvictionRun" value="${redis.numTestsPerEvictionRun}" />
		<!-- 对象空闲多久后逐出, 当空闲时间>该值 且 空闲连接>最大空闲数 时直接逐出,不再根据MinEvictableIdleTimeMillis判断 
			(默认逐出策略) -->
		<property name="softMinEvictableIdleTimeMillis" value="${redis.softMinEvictableIdleTimeMillis}" />
		<!-- 在获取连接的时候检查有效性, 默认false -->
		<property name="testOnBorrow" value="${redis.testOnBorrow}" />
		<!-- 在空闲时检查有效性, 默认false -->
		<property name="testWhileIdle" value="${redis.testWhileIdle}" />
		<!-- 逐出扫描的时间间隔(毫秒) 如果为负数,则不运行逐出线程, 默认-1 -->
		<property name="timeBetweenEvictionRunsMillis" value="${redis.timeBetweenEvictionRunsMillis}" />
	</bean>
	<bean class="com.spring.util.RedisUtil" init-method="initConfig">
		<property name="config" ref="jedisPoolConfig" />
		<property name="address" value="${redis.address}" />
		<property name="port" value="${redis.port}" />
	</bean>
</beans>